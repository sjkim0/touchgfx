/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CONTAINERALCBASE_HPP
#define CONTAINERALCBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class ContainerALCBase : public touchgfx::Container
{
public:
    ContainerALCBase();
    virtual ~ContainerALCBase();
    virtual void initialize();

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_name;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_value;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_unit;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_m01;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_p01;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_m10;
    touchgfx::TextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_p10;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_set_name;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_set;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_read;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_state;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_alc_on;
    touchgfx::WildcardTextButtonStyle< touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  >  alc_alc_off;

    /*
     * Wildcard Buffers
     */
    static const uint16_t ALC_NAME_SIZE = 20;
    touchgfx::Unicode::UnicodeChar alc_nameBuffer[ALC_NAME_SIZE];
    static const uint16_t ALC_VALUE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar alc_valueBuffer[ALC_VALUE_SIZE];
    static const uint16_t ALC_UNIT_SIZE = 10;
    touchgfx::Unicode::UnicodeChar alc_unitBuffer[ALC_UNIT_SIZE];
    static const uint16_t ALC_SET_NAME_SIZE = 20;
    touchgfx::Unicode::UnicodeChar alc_set_nameBuffer[ALC_SET_NAME_SIZE];
    static const uint16_t ALC_SET_SIZE = 10;
    touchgfx::Unicode::UnicodeChar alc_setBuffer[ALC_SET_SIZE];
    static const uint16_t ALC_READ_SIZE = 15;
    touchgfx::Unicode::UnicodeChar alc_readBuffer[ALC_READ_SIZE];
    static const uint16_t ALC_STATE_SIZE = 10;
    touchgfx::Unicode::UnicodeChar alc_stateBuffer[ALC_STATE_SIZE];
    static const uint16_t ALC_ALC_ON_SIZE = 10;
    touchgfx::Unicode::UnicodeChar alc_alc_onBuffer[ALC_ALC_ON_SIZE];
    static const uint16_t ALC_ALC_OFF_SIZE = 10;
    touchgfx::Unicode::UnicodeChar alc_alc_offBuffer[ALC_ALC_OFF_SIZE];

private:

};

#endif // CONTAINERALCBASE_HPP
